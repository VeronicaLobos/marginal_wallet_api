""" ""Rename Movement.date to movement_date and change type to DATE

Revision ID: 7ea78da7a117
Revises:
Create Date: 2025-06-09 22:11:04.996542

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "7ea78da7a117"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # --- START MANUAL ADJUSTMENT ---
    # We are using op.alter_column to rename the column and change its type
    # while preserving data.
    op.alter_column(
        "movement",  # Table name
        "date",  # Existing column name
        new_column_name="movement_date",  # New column name
        existing_type=sa.VARCHAR(),  # Existing type (as confirmed by your error traceback)
        type_=sa.Date(),  # New type
        existing_nullable=False,  # Keep existing nullability
        nullable=False,  # New nullability (should match existing_nullable if not explicitly changed)
        # IMPORTANT: This 'postgresql_using' clause tells PostgreSQL how to cast existing data
        # 'date' refers to the value of the old column before renaming.
        postgresql_using="date::date",
    )
    # ### END MANUAL ADJUSTMENT ###
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # --- START MANUAL ADJUSTMENT ---
    # To downgrade, we revert the column name and type.
    op.alter_column(
        "movement",
        "movement_date",  # Existing column name (the new one from upgrade)
        new_column_name="date",  # Revert to old column name
        existing_type=sa.Date(),  # Existing type (the new type from upgrade)
        type_=sa.VARCHAR(),  # Revert to old type (VARCHAR/TEXT)
        existing_nullable=False,
        nullable=False,
        # 'postgresql_using' is also important for downgrade if you want to store dates
        # back as strings.
        postgresql_using="movement_date::varchar",
    )
    # ### END MANUAL ADJUSTMENT ###
    # ### end Alembic commands ###
